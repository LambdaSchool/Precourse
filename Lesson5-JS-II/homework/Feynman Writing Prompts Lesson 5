
for - similar to forks on the road, you might want to do something over and over and over, you can do that with a for loop, a for loop will look like this, for(i = 0; i < 10; i++) {} .. the way this works is that you first let the computer know that you are going to do a loop with the keyword if, followed by the paranthesis() and finally the curley braces{} where the code you want looped will go . i = 0 means that is where the loop will start, i < 10 is where the loop is going to stop, the loop will only stop when the i < 10 equals to false, if it never equals to false, then the loop will run forever. i++ is that makes the loop go up or down, so starting at 0(i=0) then adding one over and over(i++) and stopping when it equals to false(i<10), so once 0 turns to 10, it will equal to false since 10 is not less than 10. as long as it is true, the loop will loop whatever code is inside the curley braces. 


&&, ||, ! - && simply means and, || simply means or, and ! simply means not. you use these with true and false. so something can be true and(&&) true, or something can be true or(||) false, or something can not(!) be true, you can combine true and false many different ways using these