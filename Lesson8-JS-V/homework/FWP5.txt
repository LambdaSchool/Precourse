Prototype: The prototype is an special type of object, that exists as a property on every object in JS. It is important to note that everything in JS is an object, which means that everything in JS has a prototype available. Because this prototype is an object itself, (even though it can be found on non-object data types), you can use dot or bracket notation to interact with or alter the key value pairs on the object. In addition to this you can add key value pairs to the object as well.

Constructor: A Constructor, sometimes referred to as a Class, is a function that takes (n) parameters, and, when called with (n) arguments, returns an object with (n) key value pairs, with respect to the order in which the parameters were listed in the function. The parameters are also not specific or picky about data type. In order to use the constructor to set new values for new objects, you have to use two key words. The first is ‘this’, which will be attached to the beginning of every property you want the objects to have, like so: this.propertyOne, this.PropertyTwo, etc. The second is ‘new’, which will be used on the right side of the assignment operator, preceding the name of the constructor function. To the left side of this assignment operator, you should be declaring a variable name as you would anywhere else in JS.
