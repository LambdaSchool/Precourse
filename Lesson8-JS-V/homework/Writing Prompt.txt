#prototype
A prototype is an object that stores a large number of actions that other objects can use. All objects have a prototype, and all objects are able to perform the actions held in their prototype. This way, each separate object of a certain "type" doesn't need to keep track of all the actions it can perform simply by being an example of that "type". 

An example is that while you need to train a cat to do lots of things, like use a human toilet, you don't need to train a cat to land on all fours. It just knows how to land on its feet because it is a cat. So you don't have to take extra time to train a cat how to land on its feet. So all cat owners save time on training their cats to land on its feet, and can instead train them to do different things, like fetching. In this case, individual cats would have the Cat prototype, and the Cat prototype would have the "land on all fours" method. Individual cat objects would then have the "use toilet" and "fetch" method on their own if you took the time to train them.

#Constructors
A constructor is what javascript uses to create objects in a specific way each time. It is a template for an object, and then it can be used to create an object from the template, and you get to choose the specifics within the rules of the template. It is like a paint by numbers template, for example, and you can choose what paint goes in each section. While you can paint lots of different pictures this way, they will all have certain similarities. In this case, the paint colors would be the argument you give to the constructor.

The other important fact about constructors is that you can create an object with them using the "new" command. When you do this, the object you create will automatically have the constructor as its prototype. As we discussed before, this is very convenient, because it allows you to teach various actions to the prototype, without having to teach it separately to each version of the prototype. The objects you create with the constructor in this way can then have easy access to any actions stored on the constructor's prototype.