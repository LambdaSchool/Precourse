prototype - a prototype in javascript is simply an object that can contain methods and properties. Every object contains a property called .prototype that refers to this property. The prototype object's importance is best understood in terms of new objects that are created based upon a 'template' or constructor function.  Let's say I have a template/constructor function that creates new cat objects.  Inside of this cat constructor function are properties that I want every cat to have.  I can tell the constructor function what I want the name of the new cat to be, as well as other properties such as gender, hair color, etc.  These particular properties that may or may not be unique to every cat created are 'constructed' inside the cat constructor function.  What if I want a certain functionality to be common among every cat that is created?  This is where the constructor prototype comes in.  The cat constructor contains a prototype property object. Whatever we place inside this prototype object is also made available to every cat object we create.  For instance, if I want all the cat objects created by the cat constructor to be able to Meow, then I could set up this functionality in the constructor's prototype object.  I would do this in a manner similar to the following:  CatConstructorName.prototype.meow =  function meow.  We could say that the prototype creates a base functionality that is common to all objects that we create.
Constructors - constructors in javascript are functions that set the properties(or methods) of newly created objects.  In general, the properties set up within the constructor are going to be unique to the object being created. Constructors act as templates for certain types of objects being created.  For instance, a car constructor function acts as a template for new car objects and sets certain properties that a car would have. Arguments that are passed into the constructor function serve as the values for these properties. Also, after setting up the object's properties the constructor function returns the newly created object.  It is important to note that functionality that is common to all car objects should be set up in the constructor prototype object rather than within the constructor function itself.  