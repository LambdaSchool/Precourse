Objects - An object is something that we use in the computer to describe something that can exist in the real world.  For example, we can create an object in the computer that is a representation of a cat.  To create the cat object, we would list the charactertics of a cat and also list the actions that a cat can perform.  For a cat, we could label our characteristics as hair color, breed, gender, etc.  The following could be labelled as actions that a cat can perform:  Meow, Eat, Jump, Hiss.  These characteristics and actions that we enter into the computer are what make up the cat object.  
Properties - Properties are simply the characteristics that describe an object.  We could have a computer representation of a human being ,i.e. a Human object.  Some of the properties/characteristics that we could list in the computer for the human object are the following: Gender, HairColor, Height, Weight, Race, etc.  
Methods - Methods are simply the actions that an object can perform.  We could have a computer representation of a car ,i.e. a Car object.  Some of the methods/actions that we could list in the computer for the Car object are the following: Accelerate, Brake, Signal, Steer, etc.
for in loop - A for in loop is a mechanism that we use to access the properties and methods of an object. To access the properties and methods, the for loop creates a variable that represents the label of each property or method.  We can call this the loop variable.  The number of loops that occur is equal to the number of properties or methods that make up the object.  For instance, say we have a cat object and the first property is gender.  On the first loop that occurs, the loop variable represents the gender property. Using code, we can then access the value of that gender property.  For example, lets say that the name of the object is Cat1 and we named the loop variable 'key'.  On the first loop we could print out the value of the gender property via the following code:  console.log(Cat1[key]); .  We could also change that value of the gender property by the following code: Cat1[key] = 'female'; .   It is important to note that for in loops are best used for Objects rather than Arrays or other javascript types.
Dot notation vs Bracket notation - Dot notation and bracket notation are both ways in which we can access the properties and methods of objects.  Bracket notation can be used on both arrays and objects.  Dot notation is the preferred way when dealing with objects.  They are easier to use.  An example of dot notation would be the following: car.accelerate(), where car is the name of the object and accelerate is the name of the method.  In contrast, to access the accelerate method using bracket notation the following would have to be used:  car['accelerate'](). However, sometimes we have to use bracket notation on objects.  This occurs when we are using a variable to represent the property or method name.  For instance let's say we create a variable called 'prop' and set its value to 'breed'.  We have a dog object that has a built in property named breed.  To access this property directly, we can use dot notation:  dog.breed.  However, if we wanted to use the variable 'prop' to access the value of breed, we would have to use bracket notation like this:   dog[prop]. Using dot notation such as dog.prop would not work. 