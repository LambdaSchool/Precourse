DOM - The DOM stands for Document Object Model.  The DOM can be thought of as being a canvas on which I can manipulate the elements and styles of my web page.  A web page will generally consist of three main parts: HTML, CSS, and Javascript.  HTML consists of the elements that make up the web page.  CSS consists of the styling for the web page. Javascript consists of actions that can occur on the web page in response to user action.  Javascript creates these actions on the elements(HTML) or the styling(CSS). Javascript must have access to these elements in order to create an interactive web page.  Javacript manipulates the elements via our canvas, or the DOM.  The DOM is provided by the web browser and it allows Javascript to interact with the HTML and CSS elements.  The DOM is not the HTML and CSS themselves, nor is it a built in part of the Javacript language. The DOM acts like a layer on top of our HTML and CSS elements.  It is provided to us by the browser and gives Javascript access to the web page elements using Javascript syntax.
DOM Element Selectors - The DOM element selectors are like handles by which Javascript can 'grab' an HTML element.  The selectors are provided by the DOM. There are different types of selectors. Some selectors allow Javascript to specifically select an element via the element's ID, class, or tag name.  Some selectors are more general and will allow javascript to select elements using CSS selector notation. Also, some selectors allow javascript to grap more than one element at a time.  For instance, if there are more than one elements with a class of ".newclass", using javascript we can select all of those elements at a time rather than just one.  When using these handles/selectors, the element object(s) will be returned. These are stored in variables and using those variables we can manipulate the underlying HTML and CSS.
DOM events - After we have selected an element and stored it in a variable, we can then manipulate that element via javascript.  One way in which we can manipulate an element is by associating the element with a certain event.  A common example of this occurring is when we select an html button and then associate that button with the click event. Through javascript code we give instructions as for what happens when the button is clicked. There are several types of events. Some examples are click, focus, and keypress.  Associating elements to events is a way in which we make the web page more interactive with the user.